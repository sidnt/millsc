/* Unique message identifier inside this chat */
message_id: Int, 

/* Optional. Sender, empty for messages sent to channels */
from: Option[User], 

/* Optional. Sender of the message, sent on behalf of a chat. The channel itself for channel messages. The supergroup itself for messages from anonymous group administrators. The linked channel for messages automatically forwarded to the discussion group */
sender_chat: Option[Chat], 

/* Date the message was sent in Unix time */
date: Int, 

/* Conversation the message belongs to */
chat: Chat, 

/* Optional. For forwarded messages, sender of the original message */
forward_from: Option[User], 

/* Optional. For messages forwarded from channels or from anonymous administrators, information about the original sender chat */
forward_from_chat: Option[Chat], 

/* Optional. For messages forwarded from channels, identifier of the original message in the channel */
forward_from_message_id: Option[Int], 

/* Optional. For messages forwarded from channels, signature of the post author if present */
forward_signature: Option[String], 

/* Optional. Sender's name for messages forwarded from users who disallow adding a link to their account in forwarded messages */
forward_sender_name: Option[String], 

/* Optional. For forwarded messages, date the original message was sent in Unix time */
forward_date: Option[Int], 

/* Optional. For replies, the original message. Note that the Message object in this field will not contain further reply_to_message fields even if it itself is a reply. */
reply_to_message: Option[Message], 

/* Optional. Bot through which the message was sent */
via_bot: Option[User], 

/* Optional. Date the message was last edited in Unix time */
edit_date: Option[Int], 

/* Optional. The unique identifier of a media message group this message belongs to */
media_group_id: Option[String], 

/* Optional. Signature of the post author for messages in channels, or the custom title of an anonymous group administrator */
author_signature: Option[String], 

/* Optional. For text messages, the actual UTF-8 text of the message, 0-4096 characters */
text: Option[String], 

/* Optional. For text messages, special entities like usernames, URLs, bot commands, etc. that appear in the text */
entities: Option[Array[MessageEntity]], 

/* Optional. Message is an animation, information about the animation. For backward compatibility, when this field is set, the document field will also be set */
animation: Option[Animation], 

/* Optional. Message is an audio file, information about the file */
audio: Option[Audio], 

/* Optional. Message is a general file, information about the file */
document: Option[Document], 

/* Optional. Message is a photo, available sizes of the photo */
photo: Option[Array[PhotoSize]], 

/* Optional. Message is a sticker, information about the sticker */
sticker: Option[Sticker], 

/* Optional. Message is a video, information about the video */
video: Option[Video], 

/* Optional. Message is a video note, information about the video message */
video_note: Option[VideoNote], 

/* Optional. Message is a voice message, information about the file */
voice: Option[Voice], 

/* Optional. Caption for the animation, audio, document, photo, video or voice, 0-1024 characters */
caption: Option[String], 

/* Optional. For messages with a caption, special entities like usernames, URLs, bot commands, etc. that appear in the caption */
caption_entities: Option[Array[MessageEntity]], 

/* Optional. Message is a shared contact, information about the contact */
contact: Option[Contact], 

/* Optional. Message is a dice with random value */
dice: Option[Dice], 

/* Optional. Message is a game, information about the game. More about games » */
game: Option[Game], 

/* Optional. Message is a native poll, information about the poll */
poll: Option[Poll], 

/* Optional. Message is a venue, information about the venue. For backward compatibility, when this field is set, the location field will also be set */
venue: Option[Venue], 

/* Optional. Message is a shared location, information about the location */
location: Option[Location], 

/* Optional. New members that were added to the group or supergroup and information about them (the bot itself may be one of these members) */
new_chat_members: Option[Array[User]], 

/* Optional. A member was removed from the group, information about them (this member may be the bot itself) */
left_chat_member: Option[User], 

/* Optional. A chat title was changed to this value */
new_chat_title: Option[String], 

/* Optional. A chat photo was change to this value */
new_chat_photo: Option[Array[PhotoSize]], 

/* Optional. Service message: the chat photo was deleted */
delete_chat_photo: Option[True], 

/* Optional. Service message: the group has been created */
group_chat_created: Option[True], 

/* Optional. Service message: the supergroup has been created. This field can't be received in a message coming through updates, because bot can't be a member of a supergroup when it is created. It can only be found in reply_to_message if someone replies to a very first message in a directly created supergroup. */
supergroup_chat_created: Option[True], 

/* Optional. Service message: the channel has been created. This field can't be received in a message coming through updates, because bot can't be a member of a channel when it is created. It can only be found in reply_to_message if someone replies to a very first message in a channel. */
channel_chat_created: Option[True], 

/* Optional. The group has been migrated to a supergroup with the specified identifier. This number may be greater than 32 bits and some programming languages may have difficulty/silent defects in interpreting it. But it is smaller than 52 bits, so a signed 64 bit integer or double-precision float type are safe for storing this identifier. */
migrate_to_chat_id: Option[Int], 

/* Optional. The supergroup has been migrated from a group with the specified identifier. This number may be greater than 32 bits and some programming languages may have difficulty/silent defects in interpreting it. But it is smaller than 52 bits, so a signed 64 bit integer or double-precision float type are safe for storing this identifier. */
migrate_from_chat_id: Option[Int], 

/* Optional. Specified message was pinned. Note that the Message object in this field will not contain further reply_to_message fields even if it is itself a reply. */
pinned_message: Option[Message], 

/* Optional. Message is an invoice for a payment, information about the invoice. More about payments » */
invoice: Option[Invoice], 

/* Optional. Message is a service message about a successful payment, information about the payment. More about payments » */
successful_payment: Option[SuccessfulPayment], 

/* Optional. The domain name of the website on which the user has logged in. More about Telegram Login » */
connected_website: Option[String], 

/* Optional. Telegram Passport data */
passport_data: Option[PassportData], 

/* Optional. Service message. A user in the chat triggered another user's proximity alert while sharing Live Location. */
proximity_alert_triggered: Option[ProximityAlertTriggered], 

/* Optional. Inline keyboard attached to the message. login_url buttons are represented as ordinary url buttons. */
reply_markup: Option[InlineKeyboardMarkup], 